// Code generated by mockery v2.49.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TatoebaLinkAddParameter is an autogenerated mock type for the TatoebaLinkAddParameter type
type TatoebaLinkAddParameter struct {
	mock.Mock
}

type TatoebaLinkAddParameter_Expecter struct {
	mock *mock.Mock
}

func (_m *TatoebaLinkAddParameter) EXPECT() *TatoebaLinkAddParameter_Expecter {
	return &TatoebaLinkAddParameter_Expecter{mock: &_m.Mock}
}

// GetFrom provides a mock function with given fields:
func (_m *TatoebaLinkAddParameter) GetFrom() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetFrom")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// TatoebaLinkAddParameter_GetFrom_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetFrom'
type TatoebaLinkAddParameter_GetFrom_Call struct {
	*mock.Call
}

// GetFrom is a helper method to define mock.On call
func (_e *TatoebaLinkAddParameter_Expecter) GetFrom() *TatoebaLinkAddParameter_GetFrom_Call {
	return &TatoebaLinkAddParameter_GetFrom_Call{Call: _e.mock.On("GetFrom")}
}

func (_c *TatoebaLinkAddParameter_GetFrom_Call) Run(run func()) *TatoebaLinkAddParameter_GetFrom_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TatoebaLinkAddParameter_GetFrom_Call) Return(_a0 int) *TatoebaLinkAddParameter_GetFrom_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TatoebaLinkAddParameter_GetFrom_Call) RunAndReturn(run func() int) *TatoebaLinkAddParameter_GetFrom_Call {
	_c.Call.Return(run)
	return _c
}

// GetTo provides a mock function with given fields:
func (_m *TatoebaLinkAddParameter) GetTo() int {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetTo")
	}

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// TatoebaLinkAddParameter_GetTo_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTo'
type TatoebaLinkAddParameter_GetTo_Call struct {
	*mock.Call
}

// GetTo is a helper method to define mock.On call
func (_e *TatoebaLinkAddParameter_Expecter) GetTo() *TatoebaLinkAddParameter_GetTo_Call {
	return &TatoebaLinkAddParameter_GetTo_Call{Call: _e.mock.On("GetTo")}
}

func (_c *TatoebaLinkAddParameter_GetTo_Call) Run(run func()) *TatoebaLinkAddParameter_GetTo_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *TatoebaLinkAddParameter_GetTo_Call) Return(_a0 int) *TatoebaLinkAddParameter_GetTo_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *TatoebaLinkAddParameter_GetTo_Call) RunAndReturn(run func() int) *TatoebaLinkAddParameter_GetTo_Call {
	_c.Call.Return(run)
	return _c
}

// NewTatoebaLinkAddParameter creates a new instance of TatoebaLinkAddParameter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewTatoebaLinkAddParameter(t interface {
	mock.TestingT
	Cleanup(func())
}) *TatoebaLinkAddParameter {
	mock := &TatoebaLinkAddParameter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
